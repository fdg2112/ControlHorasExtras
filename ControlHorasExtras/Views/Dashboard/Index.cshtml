@{
    ViewData["Title"] = "Dashboard";
    var horasDelMes = ViewData["HorasDelMes"] as int? ?? 0;
    var gastoDelMes = ViewData["GastoDelMes"] as double? ?? 0.0;
    var horasPorMes = ViewData["HorasPorMes"] as dynamic;
}

<div class="container mt-4">
    <h1>Dashboard</h1>
    <div class="row">
        <!-- Gráfico de horas del mes -->
        <div class="col-md-6">
            <h3>Horas realizadas en el mes</h3>
            <canvas id="horasMesChart"></canvas>
        </div>

        <!-- Gráfico de gasto -->
        <div class="col-md-6">
            <h3>Gasto en horas extras</h3>
            <canvas id="gastoMesChart"></canvas>
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-12">
            <h3>Histórico de Horas por Mes</h3>
            <canvas id="horasHistoricasChart"></canvas>
        </div>
    </div>
</div>

<!-- Formulario flotante para cargar horas -->
<div class="floating-form">
    <button class="btn btn-primary" onclick="toggleForm()">Cargar Horas Extras</button>
    <form id="formHoras" class="hidden mt-3">
        <h4>Cargar Horas</h4>
        <div class="mb-3">
            <label for="empleado" class="form-label">Empleado</label>
            <input type="text" id="empleado" class="form-control" placeholder="Ingrese nombre o legajo">
        </div>
        <div class="mb-3">
            <label for="fechaInicio" class="form-label">Fecha y Hora Inicio</label>
            <input type="datetime-local" id="fechaInicio" class="form-control">
        </div>
        <div class="mb-3">
            <label for="fechaFin" class="form-label">Fecha y Hora Fin</label>
            <input type="datetime-local" id="fechaFin" class="form-control">
        </div>
        <div class="mb-3">
            <label for="lugar" class="form-label">Lugar</label>
            <input type="text" id="lugar" class="form-control">
        </div>
        <button type="submit" class="btn btn-success">Guardar</button>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // Datos para gráficos
    const horasDelMes = @Html.Raw(Json.Serialize(horasPorMes));
    const horasMesChart = document.getElementById('horasMesChart').getContext('2d');
    const gastoMesChart = document.getElementById('gastoMesChart').getContext('2d');

    new Chart(horasMesChart, {
        type: 'bar',
        data: {
            labels: horasDelMes.map(h => h.Mes),
            datasets: [{
                label: 'Horas Realizadas',
                data: horasDelMes.map(h => h.TotalHoras),
                backgroundColor: 'rgba(75, 192, 192, 0.6)'
            }]
        }
    });

    new Chart(gastoMesChart, {
        type: 'line',
        data: {
            labels: horasDelMes.map(h => h.Mes),
            datasets: [{
                label: 'Gasto Mensual',
                data: horasDelMes.map(h => h.TotalHoras * 150), // Asumiendo un gasto promedio
                borderColor: 'rgba(255, 99, 132, 1)',
                fill: false
            }]
        }
    });

    function toggleForm() {
        const form = document.getElementById('formHoras');
        form.classList.toggle('hidden');
    }
</script>

<style>
    .floating-form {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: white;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    }
    .hidden {
        display: none;
    }
</style>
